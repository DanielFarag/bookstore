name: Start Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout codes
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: danielfarag
          password: ${{ secrets.AUTH_TOKEN }}

      - name: Build Docker image
        run: docker build -t ghcr.io/danielfarag/bookstorenode:latest .
  
      - name: Push Docker image to GitHub Container Registry
        run: docker push ghcr.io/danielfarag/bookstorenode:latest


      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_KEY_SECRET }}
          aws configure set region ${{ secrets.AWS_REGION }}
    
      - name: Deploy entry point [static file for redirection]
        run: |
          aws s3 cp ./public/deployment/index.html s3://iti-bookstore

      - name: Check EC2 Instance Status
        run: |
          MAX_RETRIES=20
          RETRY_INTERVAL=15

          for ((i=1; i<=MAX_RETRIES; i++)); do
            echo "Attempt $i: Checking IP address..."
            RESPONSE=$(curl -s https://8uu2x8k8ja.execute-api.us-east-1.amazonaws.com/default/startEc2OnRequest)
            IP_ADDRESS=$(echo $RESPONSE | jq -r '.ip_address')

            echo "IP Address: $IP_ADDRESS"

            if [[ "$IP_ADDRESS" != "" && "$IP_ADDRESS" != "Not Assigned" ]]; then
              echo "IP Address found: $IP_ADDRESS"
              echo "ip_address=$IP_ADDRESS" >> $GITHUB_ENV
              exit 0
            fi

            echo "IP Address not yet assigned. Retrying in $RETRY_INTERVAL seconds..."
            sleep $RETRY_INTERVAL
          done
          

          echo "Max retries reached. IP Address still not assigned."
          exit 1


      - name: Set up SSH Key
        if: env.ip_address != 'null'
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa


      - name: Pull Docker image if EC2 is running
        if: env.ip_address != 'null'
        run: |
          MAX_RETRIES=10
          RETRY_DELAY=10
          for i in $(seq 1 $MAX_RETRIES); do
          
            echo "Attempt $i: Checking SSH connection to ${{ env.ip_address }}..."

            if ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ env.ip_address }} "echo SSH connection successful"; then
              echo "SSH connection established!"
              ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ env.ip_address }} \
              'docker compose pull && docker compose up -d'
              break
            else
              echo "SSH not ready, retrying in $RETRY_DELAY seconds..."
              sleep $RETRY_DELAY
            fi
      
            if [ "$i" -eq "$MAX_RETRIES" ]; then
              echo "Failed to connect via SSH after $MAX_RETRIES attempts."
              exit 1
            fi
          done
        